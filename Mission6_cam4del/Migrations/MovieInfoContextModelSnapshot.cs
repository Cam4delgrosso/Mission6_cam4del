// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission6_cam4del.Models;

namespace Mission6_cam4del.Migrations
{
    [DbContext(typeof(MovieInfoContext))]
    partial class MovieInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission6_cam4del.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lent_to")
                        .HasColumnType("TEXT");

                    b.Property<string>("notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.HasIndex("CategoryID");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryID = 1,
                            director = "John Singleton",
                            edited = false,
                            lent_to = "Cameron Delgrosso",
                            notes = "Very fast, not very furious",
                            rating = "PG-13",
                            title = "2 Fast 2 Furious",
                            year = 2003
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryID = 2,
                            director = "Phil Lord",
                            edited = true,
                            lent_to = "Cameron Delgrosso",
                            notes = "Jonah Hill is funny",
                            rating = "R",
                            title = "21 Jump Street",
                            year = 2012
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryID = 1,
                            director = "Joseph Kosinski",
                            edited = false,
                            lent_to = "Cameron Delgrosso",
                            notes = "Gave me chills",
                            rating = "PG-13",
                            title = "Top Gun Maverick",
                            year = 2022
                        });
                });

            modelBuilder.Entity("Mission6_cam4del.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Action"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Animation"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Documentary"
                        });
                });

            modelBuilder.Entity("Mission6_cam4del.Models.ApplicationResponse", b =>
                {
                    b.HasOne("Mission6_cam4del.Models.Category", "CategoryName")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
